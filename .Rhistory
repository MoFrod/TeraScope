setwd("D:/Morgan/Documents/NCL MSc/EDA/Test"
load.project("cashflow_analysis")
setwd("D:/Morgan/Documents/NCL MSc/EDA/Test"
setwd("D:/Morgan/Documents/NCL MSc/EDA/Test")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
# Convert timestamp values to date/time
as_datetime(AC1%timestamp)
# Convert timestamp values to date/time
as_datetime(AC1$timestamp)
setwd("D:/Morgan/Documents/NCL MSc/CC/CSC8634_TeraScope_210431461")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
# Round duration in AC2
AC2$duration <- AC2$duration %>%
as.numeric() %>%
round(., digits = 2)
# create time bucket to compare event (confirm timestamp is in correct order, and then do for GPU spreadsheet, then merge on timestamp)
DF1 <- head(AC1, 100)
for (T in DF1$timestamp) {
if(T < BEGIN + BUCKET) {
T = BEGIN
} else{BEGIN <- BEGIN + BUCKET}
if(BEGIN > END){
break
}
View(DF1)
# Check whether the hostnames across AC1 and GPU1
all(AC1$hostname %in% GPU1$hostname)
#Select one virtual machine) for investigation to test how to investigate
AC3 <- AC1 %>%
filter(hostname == "04dc4e9647154250beeee51b866b0715000000") %>%
filter(timestamp >= "2018-11-08 07:43:00", timestamp <= "2018-11-08 07:50:00")
View(AC3)
View(GPU1)
# Plot same set of GPU temperature, memory and core utilisation.
Usage <- GPU1 %>% slice(2000:2010) %>%
ggplot(aes(x = timestamp)) + geom_line(aes(y = gpuTempC), colour = "#b2df8a", size = 2) + geom_line(aes(y = gpuUtilPerc), colour = "#1f78b4", size = 2) + geom_line(aes(y = gpuMemUtilPerc), colour = "#a6cee3", size = 2) + scale_colour_brewer(palette = "Paired")
# Plot same set of GPU temperature, memory and core utilisation.
GPU1 %>% slice(2000:2010) %>%
ggplot(aes(x = timestamp)) + geom_line(aes(y = gpuTempC), colour = "#b2df8a", size = 2) + geom_line(aes(y = gpuUtilPerc), colour = "#1f78b4", size = 2) + geom_line(aes(y = gpuMemUtilPerc), colour = "#a6cee3", size = 2) + scale_colour_brewer(palette = "Paired")
# Plot duration of events
AC2 %>% head(50) %>%
ggplot(aes(x = START)) + geom_line(aes(y = duration), colour = "#33a02c", size = 1)
# Plot duration of eventName activities
ggplot(AC2, aes(x = eventName, y = duration)) + geom_boxplot()
# Remove Total Render from results
AC3 <- AC2 %>%
filter(eventName != "TotalRender")
# Plot duration of eventName activities without total render
ggplot(AC3, aes(x = eventName, y = duration)) + geom_boxplot()
# Remove Render from results
AC4 <- AC3 %>%
filter(eventName != "Render")
# Plot duration of eventName activities without render
ggplot(AC4, aes(x = eventName, y = duration)) + geom_boxplot()
# Remove Uploading from results
AC5 <- AC4 %>%
filter(eventName != "Uploading")
# Plot duration of eventName activities without uploading
ggplot(AC5, aes(x = eventName, y = duration)) + geom_boxplot()
View(DF1)
# create time bucket to compare event (confirm timestamp is in correct order, and then do for GPU spreadsheet, then merge on timestamp)
DF1 <- head(AC1, 100) %>% arrange(timestamp, .by_group = TRUE)
